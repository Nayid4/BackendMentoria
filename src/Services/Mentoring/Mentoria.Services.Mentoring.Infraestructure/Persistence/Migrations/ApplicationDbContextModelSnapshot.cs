// <auto-generated />
using System;
using Mentoria.Services.Mentoring.Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mentoria.Services.Mentoring.Infraestructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.AcademicInformations.AcademicInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CareerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cicle")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Expectative")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("IdCareer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.ToTable("AcademicInformation");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.Careers.Career", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Career");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.MentorAssignments.MentorAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("IdMentor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("IdMentor");

                    b.HasIndex("IdUser");

                    b.ToTable("MentorAssignment");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.PersonalInformations.PersonalInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonalInformation");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramActivities.ProgramActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdProgram")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("IdProgram");

                    b.HasIndex("ProgramId");

                    b.ToTable("ProgramActivity");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramActivitiesSolutions.ProgramActivitySolution", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Calification")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("IdFileSolution")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProgramActivity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProgramActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdProgramActivity");

                    b.HasIndex("ProgramActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("ProgramActivitySolution");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramUsers.ProgramUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid>("IdProgram")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProgramId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdProgram");

                    b.HasIndex("ProgramId");

                    b.HasIndex("UserId");

                    b.ToTable("ProgramUser");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.Programs.Program", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("IdCareer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaximumNumberOfParticipants")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("IdCareer");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdAcademicInformation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPersonalInformation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdRole")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdAcademicInformation");

                    b.HasIndex("IdPersonalInformation");

                    b.HasIndex("IdRole");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.AcademicInformations.AcademicInformation", b =>
                {
                    b.HasOne("Mentoria.Services.Mentoring.Domain.Careers.Career", "Career")
                        .WithMany()
                        .HasForeignKey("CareerId");

                    b.Navigation("Career");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.MentorAssignments.MentorAssignment", b =>
                {
                    b.HasOne("Mentoria.Services.Mentoring.Domain.Users.User", "Mentor")
                        .WithMany()
                        .HasForeignKey("IdMentor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Mentoria.Services.Mentoring.Domain.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Mentor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramActivities.ProgramActivity", b =>
                {
                    b.HasOne("Mentoria.Services.Mentoring.Domain.ProgramMentoring.Programs.Program", null)
                        .WithMany("Activities")
                        .HasForeignKey("IdProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mentoria.Services.Mentoring.Domain.ProgramMentoring.Programs.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramActivitiesSolutions.ProgramActivitySolution", b =>
                {
                    b.HasOne("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramActivities.ProgramActivity", null)
                        .WithMany("ProgramActivitySolutions")
                        .HasForeignKey("IdProgramActivity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramActivities.ProgramActivity", "ProgramActivity")
                        .WithMany()
                        .HasForeignKey("ProgramActivityId");

                    b.HasOne("Mentoria.Services.Mentoring.Domain.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ProgramActivity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramUsers.ProgramUser", b =>
                {
                    b.HasOne("Mentoria.Services.Mentoring.Domain.ProgramMentoring.Programs.Program", null)
                        .WithMany("Users")
                        .HasForeignKey("IdProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mentoria.Services.Mentoring.Domain.ProgramMentoring.Programs.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.HasOne("Mentoria.Services.Mentoring.Domain.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Program");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.Programs.Program", b =>
                {
                    b.HasOne("Mentoria.Services.Mentoring.Domain.Careers.Career", "Career")
                        .WithMany()
                        .HasForeignKey("IdCareer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Career");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.Users.User", b =>
                {
                    b.HasOne("Mentoria.Services.Mentoring.Domain.AcademicInformations.AcademicInformation", "AcademicInformation")
                        .WithMany()
                        .HasForeignKey("IdAcademicInformation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mentoria.Services.Mentoring.Domain.PersonalInformations.PersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("IdPersonalInformation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mentoria.Services.Mentoring.Domain.Roles.Role", "Role")
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicInformation");

                    b.Navigation("PersonalInformation");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.ProgramActivities.ProgramActivity", b =>
                {
                    b.Navigation("ProgramActivitySolutions");
                });

            modelBuilder.Entity("Mentoria.Services.Mentoring.Domain.ProgramMentoring.Programs.Program", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
