services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    user: '0:0'
    ports:
      - "2501:1433"
    environment:
      - SA_PASSWORD=YourStrongPwd1
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
    volumes:
      - sqldata:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "if [ -f /opt/mssql-tools18/bin/sqlcmd ]; then /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P YourStrongPwd1 -Q 'SELECT 1' -C; elif [ -f /opt/mssql-tools/bin/sqlcmd ]; then /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P YourStrongPwd1 -Q 'SELECT 1'; else exit 1; fi"]
      interval: 20s       # Aumentamos el intervalo para darle más tiempo a SQL Server
      timeout: 10s
      retries: 5          # Más intentos antes de marcarlo como unhealthy
      start_period: 40s   # Más tiempo antes de comenzar a verificar el estado

    restart: unless-stopped

  api:
    build:
      context: .  
      dockerfile: src/Services/Mentoring/Mentoria.Services.Mentoring.API/Dockerfile
    container_name: hotel_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_KESTREL__ENDPOINTS__HTTP__URL=http://+:80
    ports:
      - "8080:80"
    volumes:
      - appdata:/app
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  runtrack-blob-storage:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    container_name: runtracker.blob-storage
    volumes:
      - ./.containers/blob-storage/data:/data
    ports:
      - "10000:10000"  # Blob service
    command: "azurite-blob --blobHost 0.0.0 -l /data"

volumes:
  appdata:
    driver: local
  sqldata:
    driver: local
